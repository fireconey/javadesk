Exception		Name Description
Exception                                      Base class for all exceptions
StopIteration	 	Raised when the next() method of an iterator does not 
		point to any object.
SystemExit	 	Raised by the sys.exit() function.
StandardError		Base class for all built-in exceptions except StopIteration
and SystemExit.
ArithmeticError   	Base class for all errors that occur for numeric 
		calculation.
OverflowError	 	Raised when a calculation exceeds maximum limit for a
		numeric type.
FloatingPointError	Raised when a floating point calculation fails.
ZeroDivisonError	Raised when division or modulo by zero takes place for 		all
numeric types.
AssertionError		Raised in case of failure of the Assert statement.
AttributeError 		Raised in case of failure of attribute reference or 
		assignment.
EOFError 		Raised when there is no input from either the raw_input(		) orinput() function and the end of file is reached.
		ImportError	 Raised when an import statement fails.
KeyboardInterrupt 	Raised when the user interrupts program execution, usu		allyby pressing Ctrl+c.
LookupError 		 Base class for all lookup errors.
IndexError 		Raised when an index is not found in a sequence.
KeyError 		Raised when the specified key is not found in the diction		ary.
NameError		Raised when an identifier is not found in the local or 
		global namespace.
UnboundLocalError 	Raised when trying to access a local variable in a 
		function ormethod but no value has been assigned to it.
EnvironmentError	Base class for all exceptions that occur outside the 
		Pythonenvironment.
IOError		Raised when an input/ output operation fails, such as 
		theprint statement or the open() function when trying 
		to open a file that does not exist.
OSError 		Raised for operating system-related errors.
SyntaxError 		Raised when there is an error in Python syntax.
IndentationError 	Raised when indentation is not specified properly.
SystemError		Raised when the interpreter finds an internal problem, 
		but when this error is encountered the Python 
		interpreter does not exit.
SystemExit		Raised when Python interpreter is quit by using the
		sys.exit() function. If not handled in the code, causes the
		interpreter to exit.
TypeError		Raised when an operation or function is attempted 
		that is invalid for the specified data type.
ValueError		Raised when the built-in function for a data type has the
		valid type of arguments, but the arguments have invalid
		values specified.Python
RuntimeError 		Raised when a generated error does not fall into any		category.
NotImplementedError	Raised when an abstract method that needs to be
		implemented in an inherited class is not actually
		implemented
